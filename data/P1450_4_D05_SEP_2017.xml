<bibdata type="standard">
  <title type="title-main" format="text/plain">IEEE Draft Standard for Extensions to Standard Test Interface Language (STIL) (IEEE Std. 1450-1999) for Test Flow Specification</title>
  <title type="main" format="text/plain">IEEE Draft Standard for Extensions to Standard Test Interface Language (STIL) (IEEE Std. 1450-1999) for Test Flow Specification</title>
  <uri type="src">https://ieeexplore.ieee.org/document/8057607</uri>
  <docidentifier type="IEEE">P1450.4/D05, September 2017</docidentifier>
  <docidentifier type="ISBN">978-1-5044-4284-8</docidentifier>
  <docnumber>P1450.4/D05, Sep. 2017</docnumber>
  <date type="created">
    <on>2017</on>
  </date>
  <date type="published">
    <on>2017-10-03</on>
  </date>
  <date type="issued">
    <on>2017-12-06</on>
  </date>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>Institute of Electrical and Electronics Engineers</name>
      <abbreviation>IEEE</abbreviation>
      <uri>http://www.ieee.org</uri>
      <address>
        <city>New York</city>
        <country>USA</country>
      </address>
    </organization>
  </contributor>
  <language>en</language>
  <script>Latn</script>
  <abstract format="text/plain" language="en" script="Latn">This standard extends IEEE Std 1450-1999 (STIL) to 39 provide an interface between test generation tools and test equipment with regard to the specification of the flow of execution of test program components. It defines structures such that test flows, sub-flows, and binning may be described in a manner that facilitates automated generation, modification, and/or manual maintenance, and although not yet a complete run-time test language, execution on automated test equipment (ATE). It defines an interface between tester configurations (described by IEEE Std 1450-1999 and IEEE 1450.2-2002) and test program components. It defines a hierarchy of flows, sub-flows, and test components. It defines structures for defining flow related variables and processing expressions involving those variables. It provides structures that support automatic test program generation (ATPRG) and translation, and running it natively as an ATE programming language. As an adjunct, IEEE Std 1450.3-2007, may be used by ATPRG for tester rules checking.</abstract>
  <copyright>
    <from>2017</from>
    <owner>
      <organization>
        <name>Institute of Electrical and Electronics Engineers</name>
        <abbreviation>IEEE</abbreviation>
        <uri>http://www.ieee.org</uri>
      </organization>
    </owner>
  </copyright>
  <keyword>IEEE Standards</keyword>
  <keyword>Integrated circuits</keyword>
  <keyword>Power generation</keyword>
  <keyword>Computer aided engineering</keyword>
  <keyword>integrated circuit (IC) test</keyword>
  <keyword>automatic test program generator or generation (ATPRG</keyword>
  <keyword>ATPG</keyword>
  <keyword>or TPG)</keyword>
  <keyword>computer-aided engineering (CAE)</keyword>
  <keyword>test program description</keyword>
  <keyword>test program language</keyword>
  <keyword>test flow</keyword>
  <keyword>binning</keyword>
  <keyword>device under test (DUT).</keyword>
</bibdata>