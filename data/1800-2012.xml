<bibdata type="standard">
  <title type="title-main" format="text/plain">IEEE Standard for SystemVerilog--Unified Hardware Design, Specification, and Verification Language</title>
  <title type="main" format="text/plain">IEEE Standard for SystemVerilog--Unified Hardware Design, Specification, and Verification Language</title>
  <uri type="src">https://ieeexplore.ieee.org/document/6469140</uri>
  <docidentifier type="IEEE">IEEE Std 1800-2012 (Revision of IEEE Std 1800-2009)</docidentifier>
  <docidentifier type="ISBN">978-0-7381-8110-3</docidentifier>
  <docidentifier type="DOI">10.1109/IEEESTD.2013.6469140</docidentifier>
  <docnumber>1800-2012</docnumber>
  <date type="updated">
    <on>2013-04-12</on>
  </date>
  <date type="created">
    <on>2013-02-21</on>
  </date>
  <date type="published">
    <on>2013-02-22</on>
  </date>
  <date type="issued">
    <on>2012-12-05</on>
  </date>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>Institute of Electrical and Electronics Engineers</name>
      <abbreviation>IEEE</abbreviation>
      <uri>http://www.ieee.org</uri>
    </organization>
  </contributor>
  <language>en</language>
  <script>Latn</script>
  <abstract format="text/plain" language="en" script="Latn">The definition of the language syntax and semantics for SystemVerilog, which is a unified hardware design, specification, and verification language, is provided. This standard includes support for modeling hardware at the behavioral, register transfer level (RTL), and gate-level abstraction levels, and for writing testbenches using coverage, assertions, object-oriented programming, and constrained random verification. The standard also provides application programming interfaces (APIs) to foreign programming languages.</abstract>
  <abstract format="text/plain" language="en" script="Latn">The definition of the language syntax and semantics for SystemVerilog, which is a unified hardware design, specification, and verification language, is provided. This standard includes support for modeling hardware at the behavioral, register transfer level (RTL), and gate-level abstraction levels, and for writing test benches using coverage, assertions, object-oriented programming, and constrained random verification. The standard also provides application programming interfaces (APIs) to foreign programming languages. (Thanks to our sponsor, the PDF of this standard is provided to the public no charge. Visit GETIEEE program located at http://standards.ieee.org/about/get/index.html for details.)</abstract>
  <copyright>
    <from>2013</from>
    <owner>
      <organization>
        <name>Institute of Electrical and Electronics Engineers</name>
        <abbreviation>IEEE</abbreviation>
        <uri>http://www.ieee.org</uri>
      </organization>
    </owner>
  </copyright>
  <relation type="updates">
    <description format="text/plain" language="en" script="Latn">revises</description>
    <bibitem>
      <formattedref format="text/plain">IEEE Std 1800-2009 (Revision of IEEE Std1800-2005) - Redline</formattedref>
    </bibitem>
  </relation>
  <relation type="obsoletedBy">
    <bibitem>
      <formattedref format="text/plain">IEEE Std 1800-2017 (Revision of IEEE Std 1800-2012)</formattedref>
    </bibitem>
  </relation>
  <keyword>IEEE standards</keyword>
  <keyword>Programming</keyword>
  <keyword>Computer languages</keyword>
  <keyword>Hardware design languages</keyword>
  <keyword>Design automation</keyword>
  <keyword>assertions</keyword>
  <keyword>design automation</keyword>
  <keyword>design verification</keyword>
  <keyword>hardware description language</keyword>
  <keyword>HDL</keyword>
  <keyword>HDVL</keyword>
  <keyword>IEEE 1800&amp;amp;amp;#8482;</keyword>
  <keyword>PLI</keyword>
  <keyword>programming language interface</keyword>
  <keyword>SystemVerilog</keyword>
  <keyword>Verilog&amp;amp;amp;#174;</keyword>
  <keyword>VPI</keyword>
</bibdata>