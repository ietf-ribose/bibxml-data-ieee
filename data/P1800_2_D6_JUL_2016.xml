<bibdata type="standard">
  <title type="title-main" format="text/plain">IEEE Draft Standard for Universal Verification Methodology Language Reference Manual</title>
  <title type="main" format="text/plain">IEEE Draft Standard for Universal Verification Methodology Language Reference Manual</title>
  <uri type="src">https://ieeexplore.ieee.org/document/7530809</uri>
  <docidentifier type="IEEE">IEEE P1800.2/D6, July 2016</docidentifier>
  <docidentifier type="ISBN">978-1-5044-2218-5</docidentifier>
  <docnumber>P1800.2/D6, Jul 2016</docnumber>
  <date type="created">
    <on>2016-01-01</on>
  </date>
  <date type="published">
    <on>2016-08-03</on>
  </date>
  <date type="issued">
    <on>2016</on>
  </date>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>Institute of Electrical and Electronics Engineers</name>
      <abbreviation>IEEE</abbreviation>
      <uri>http://www.ieee.org</uri>
      <address>
        <city>Piscataway</city>
        <country>USA</country>
      </address>
    </organization>
  </contributor>
  <language>en</language>
  <script>Latn</script>
  <abstract format="text/plain" language="en" script="Latn">The Universal Verification Methodology (UVM) can improve interoperability, reduce thecost of using Intellectual Property (IP) for new projects or electronic design automation (EDA) tools, and make it easier to reuse verification components. Overall, using this standard will lowerverification costs and improve design quality throughout the industry. The primary audiences for this standard are the implementors of the UVM class library, the implementors of tools supporting the class library, and the users of the class library.</abstract>
  <copyright>
    <from>2016</from>
    <owner>
      <organization>
        <name>Institute of Electrical and Electronics Engineers</name>
        <abbreviation>IEEE</abbreviation>
        <uri>http://www.ieee.org</uri>
      </organization>
    </owner>
  </copyright>
  <keyword>IEEE Standards</keyword>
  <keyword>Universal verification</keyword>
  <keyword>Guidelines</keyword>
  <keyword>Callback</keyword>
  <keyword>Resource management</keyword>
  <keyword>Monitoring</keyword>
  <keyword>agent</keyword>
  <keyword>blocking</keyword>
  <keyword>callback</keyword>
  <keyword>class</keyword>
  <keyword>component</keyword>
  <keyword>consumer</keyword>
  <keyword>driver</keyword>
  <keyword>event</keyword>
  <keyword>export</keyword>
  <keyword>factory</keyword>
  <keyword>function</keyword>
  <keyword>generator</keyword>
  <keyword>member</keyword>
  <keyword>method</keyword>
  <keyword>monitor</keyword>
  <keyword>non-blocking</keyword>
  <keyword>phase</keyword>
  <keyword>port</keyword>
  <keyword>register</keyword>
  <keyword>resource</keyword>
  <keyword>sequence</keyword>
  <keyword>sequencer</keyword>
  <keyword>transaction level modeling</keyword>
  <keyword>verification methodology.</keyword>
</bibdata>